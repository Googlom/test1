name: Post stage

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      piper-version:
        required: false
        type: string
        default: 'latest'
      sap-piper-version:
        required: false
        type: string
        default: 'latest'
      on-productive-branch:
        required: true
        type: string
      is-optimized-and-scheduled:
        required: true
        type: string
      active-stages-map:
        required: true
        type: string
      active-steps-map:
        required: true
        type: string
      pipeline-env:
        required: true
        type: string
env:
  PIPER_ACTION_PIPER_VERSION: ${{ inputs.piper-version }}
  PIPER_ACTION_SAP_PIPER_VERSION: ${{ inputs.sap-piper-version }}
  PIPER_ACTION_GITHUB_TOOLS_TOKEN: ${{ secrets.GH_TOOLS }}
  PIPER_vaultAppRoleID: ${{ secrets.PIPER_VAULTAPPROLEID }}
  PIPER_vaultAppRoleSecretID: ${{ secrets.PIPER_VAULTAPPROLESECRETID }}
  PIPER_ACTION_PIPELINE_ENV: ${{ inputs.pipeline-env }}
jobs:
  Post:
    runs-on: self-hosted
    outputs:
      activeStagesMap: ${{ steps.checkIfStepActive.outputs.activeStagesMap }}
      activeStepsMap: ${{ steps.checkIfStepActive.outputs.activeStepsMap }}
    steps:
      - uses: actions/checkout@v3
      - name: vaultRotateSecretId
        if: fromJSON(inputs.active-steps-map)[github.job]['vaultRotateSecretId'] == true
        uses: SAP/project-piper-action@master
        with:
          step-name: vaultRotateSecretId
          flags: '--secretStore github --owner ${{ github.repository_owner }} --repository ${{ github.event.repository.name }} --githubApiUrl ${{ github.api_url }} --vaultAppRoleSecretTokenCredentialsId PIPER_vaultAppRoleSecretID --githubToken ${{ secrets.GH_TOOLS }}'
      - name: sapReportPipelineStatus
        if: |
          always() && 
          fromJSON(inputs.active-steps-map)[github.job]['sapReportPipelineStatus'] == true
        uses: SAP/project-piper-action@master
        env:
          GITHUB_URL: 'https://github.tools.sap/'
        with:
          step-name: sapReportPipelineStatus
          flags: '--gitHubToken ${{ secrets.GH_TOOLS }}'
      - name: sapCumulusUpload (cumulus-configuration)
        if: fromJSON(inputs.active-steps-map)[github.job]['sapCumulusUpload'] == true
        uses: SAP/project-piper-action@master
        with:
          step-name: sapCumulusUpload
          flags: '--filePattern **/cumulus-configuration.json --stepResultType root'
      - name: sapCumulusUpload (pipelineLog)
        if: fromJSON(inputs.active-steps-map)[github.job]['sapCumulusUpload'] == true
        uses: SAP/project-piper-action@master
        with:
          step-name: sapCumulusUpload
          flags: '--filePattern ./pipelineLog*.log --stepResultType log'
      - name: sapGenerateEnvironmentInfo
        if: fromJSON(inputs.active-steps-map)[github.job]['sapGenerateEnvironmentInfo'] == true
        uses: SAP/project-piper-action@master
        with:
          step-name: sapGenerateEnvironmentInfo
          flags: '--generateFiles releaseStatus'
      - name: sapCumulusUpload (release status info)
        if: fromJSON(inputs.active-steps-map)[github.job]['sapCumulusUpload'] == true
        uses: SAP/project-piper-action@master
        with:
          step-name: sapCumulusUpload
          flags: '--filePattern "**/release-status-*.json" --stepResultType .status-log/release'
